name: Continuous Integration

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-app:
    name: Build app
    runs-on: ubuntu-latest
    permissions:
      checks: write

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run unit tests
        run: ./gradlew test --console=plain

      - name: Publish unit tests results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            build/test-results/**/*.xml

      - name: Build app with Gradle
        run: ./gradlew build -x test --console=plain

      - name: Run app
        run: |
          rm -rf /tmp/app && mkdir -p /tmp/app
          tar xf build/distributions/*.tar --strip-components 1 -C /tmp/app
          (cd /tmp/app/bin && ./$(ls | head -1))

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: distributions
          path: build/distributions/
          if-no-files-found: error

  build-container-image:
    name: Build container image
    needs: build-app
    runs-on: ubuntu-latest
    permissions:
      security-events: write

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: distributions
          path: build/distributions/

      - name: Load app version
        run: |
          APP_VERSION=$(sed -n 's/^version=//p' gradle.properties)
          echo "APP_VERSION=$APP_VERSION"
          echo "APP_VERSION=$APP_VERSION" >> "$GITHUB_ENV"

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ github.repository }}:${{ env.APP_VERSION }}
          platforms: linux/amd64
          push: false
          load: true
        env:
          SOURCE_DATE_EPOCH: 0

      - name: Run Docker image
        run: |
          docker run --rm ${{ github.repository }}:${{ env.APP_VERSION }}

      - name: Setup Snyk
        uses: snyk/actions/setup@master

      - name: Scan container image with Snyk
        run: |
          snyk container test \
            --file=Dockerfile \
            --platform=linux/amd64 \
            --severity-threshold=low \
            --exclude-app-vulns \
            --sarif-file-output=snyk/report-container.sarif \
            ${{ github.repository }}:${{ env.APP_VERSION }}
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Upload Snyk report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk/report-container.sarif
          category: container
